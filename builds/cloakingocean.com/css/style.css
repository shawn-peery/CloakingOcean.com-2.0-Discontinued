.carousel-item img{max-width:100%;max-height:50%;margin-left:auto;margin-right:auto;display:block}.carousel-control-prev-icon{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23000000' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E")}.carousel-control-next-icon{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23000000' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E")}.carousel{border-style:solid;border-width:1rem;border-color:#343a40;margin:auto;margin-bottom:1rem}@media (min-width: 576px){.carousel{width:57vw}}@media (max-width: 767.98px){#breakpoint{background-color:green}#breakpoint .sm,#breakpoint .md,#breakpoint .lg,#breakpoint .xl{display:none}}@media (min-width: 576px){#breakpoint{background-color:blue}}@media (min-width: 768px){#breakpoint{background-color:orange}}@media (min-width: 992px){#breakpoint{background-color:pink}}@media (min-width: 1200px){#breakpoint{background-color:purple}}body{background-color:#2F2F2F}p,h1,h2,h3,h4,h5,h6{color:#68c2be;font-family:'Chakra Petch', sans-serif}h2{margin-bottom:16px;text-align:center;background-color:#343a40}h3,h5{font-style:italic}p{text-indent:1.2rem}section{padding-top:10px;padding-left:10px;padding-right:10px;margin-bottom:15px;border:solid 5px #343a40;border-radius:20px;background-image:linear-gradient(#505962, #343a40)}header{margin-bottom:1rem}@media (min-width: 576px){header{position:-webkit-sticky;position:sticky;top:0;z-index:1}}.logo{display:none}@media (min-width: 576px){.logo{display:inline-block;background-color:white;padding:5px 5px;border-radius:25px;width:50px}}.navbar-nav a{text-align:center}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
